class TreeNode {
    constructor(val) {
        this.val = val;
        this.left = this.right = null;
    }
}

function deleteNode(root, key) {
    if (root === null) return null;
    if (root.val === key) {
        // we found the match at root itself , so connect root.left to root.right
        return helper(root);
    }
    let dummy = root;
    while (root !== null) {
        if (root.val > key) {
            //remain on left side
            if (root.left !== null && root.left.val === key) {
                root.left = helper(root.left);
                break;
            } else {
                // keep coming down leftwards
                root = root.left;
            }
        } else {
            // remain on right side
            if (root.right !== null && root.right.val === key) {
                root.right = helper(root.right);
                break;
            } else {
                // keep coming down rightwards
                root = root.right;
            }
        }
    }
    return dummy;
}

function helper(root) {
    // if left side is null , return right side
    if (root.left === null) {
        return root.right;
    } else if (root.right === null) {
        // if right side is null , return left side
        return root.left;
    } else {
        let rightChild = root.right;
        let lastRight = findLastRight(root.left); // go to extreme right
        lastRight.right = rightChild;
        return root.left; // becomes new root of entire tree
    }
}

function findLastRight(root) {
    // find the extreme right of the tree
    if (root.right === null) {
        return root;
    }
    return findLastRight(root.right);
}

const root = new TreeNode(5);
root.left = new TreeNode(3);
root.right = new TreeNode(6);
root.left.left = new TreeNode(2);
root.left.right = new TreeNode(4);
root.right.right = new TreeNode(7);

const keyToDelete = 3;

//console.log("Original Tree:", JSON.stringify(root));
const result = deleteNode(root, keyToDelete);
console.log(result);
//console.log("Tree after deleting", keyToDelete, ":", JSON.stringify(result));